@page "/"
@inherits HomeBase
@rendermode InteractiveServer

<PageTitle>Document Review BINGO!</PageTitle>

<link href="css/bingo.css" rel="stylesheet" />

<div class="container">
    <h1>Document Review BINGO!</h1>

    <!-- Upload Section First -->
    <div class="upload-container">
        <div class="upload-section">
            <h2>Upload Files</h2>
            <div class="steps">
                <div class="step">
                    <h3>Step 1: Upload Bingo Phrases</h3>
                    <div class="button-group">
                        <label class="upload-button primary-button">
                            <InputFile OnChange="@ProcessPhrasesFile" accept=".txt" class="file-input" />
                            <i class="fas fa-upload"></i> Upload Phrases
                        </label>
                        <button class="upload-button secondary-button" @onclick="LoadDefaultPhrases">
                            <i class="fas fa-dice"></i> Use Default Words
                        </button>
                    </div>
                    <div class="file-instructions">
                        Upload a .txt file containing exactly 16 phrases separated by commas
                    </div>
                    @if (lastUploadedPhrasesFile != null)
                    {
                        <div class="upload-info">
                            <i class="fas fa-check-circle"></i> Phrases loaded from: @lastUploadedPhrasesFile
                        </div>
                    }
                </div>

                <div class="step @(!phrasesLoaded ? "disabled" : "")">
                    <h3>Step 2: Upload Text to Search</h3>
                    <label class="upload-button primary-button @(!phrasesLoaded ? "disabled" : "")">
                        <InputFile OnChange="@ProcessFile" accept=".txt" class="file-input" disabled="@(!phrasesLoaded)" />
                        <i class="fas fa-file-upload"></i> Upload Text File
                    </label>
                    <div class="file-instructions">
                        @if (!phrasesLoaded)
                        {
                            <span class="warning"><i class="fas fa-exclamation-triangle"></i> Please upload phrases first</span>
                        }
                        else
                        {
                            <span>Upload a .txt file (max 5MB) to check for matches</span>
                        }
                    </div>
                    @if (lastUploadedFile != null)
                    {
                        <div class="upload-info">
                            <i class="fas fa-check-circle"></i> Searching text from: @lastUploadedFile
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Bingo Grid Section -->
    <div class="game-section">
        <h2>Bingo Board</h2>
        <div class="bingo-grid">
            @if (phrases != null && phrases.Length == 16)
            {
                for (int i = 0; i < 16; i++)
                {
                    var isHighlighted = IsHighlighted(i);
                    var isMatched = IsMatched(phrases[i]);
                    <div class="bingo-cell @(isHighlighted ? "highlighted" : "") @(isMatched ? "matched" : "")" @key="i">
                        <div class="cell-content">@phrases[i]</div>
                    </div>
                }
            }
            else
            {
                for (int i = 0; i < 16; i++)
                {
                    <div class="bingo-cell empty" @key="i">
                        <div class="cell-content">Upload phrases to start</div>
                    </div>
                }
            }
        </div>
    </div>

    @if (extractedWords.Any())
    {
        <div class="word-grid-section">
            <h3>Top 20 Words Found</h3>
            <div class="word-grid">
                <div class="word-cell header">Rank</div>
                <div class="word-cell header">Word</div>
                <div class="word-cell header">Count</div>
                @foreach (var word in extractedWords.Take(20).Select((w, i) => new { Word = w.Key, Count = w.Value, Rank = i + 1 }))
                {
                    <div class="word-cell">@word.Rank</div>
                    <div class="word-cell">@word.Word</div>
                    <div class="word-cell">@word.Count</div>
                }
            </div>
        </div>
    }
</div>

@if (showBingoModal)
{
    <div class="modal-backdrop">
        <div class="modal-content">
            <div class="modal-header">
                <h2><i class="fas fa-trophy"></i> BINGO!</h2>
            </div>
            <div class="modal-body">
                <div class="confetti"></div>
                <p>Congratulations! You've found a winning combination!</p>
                <button class="close-button" @onclick="CloseModal">Close</button>
            </div>
        </div>
    </div>
}
